From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: verdox <mail.ysp@web.de>
Date: Sun, 20 Oct 2024 23:08:49 +0000
Subject: [PATCH] Fixing to align with bukkit tests


diff --git a/src/main/java/org/bukkit/craftbukkit/BukkitToNMSMapping.java b/src/main/java/org/bukkit/craftbukkit/BukkitToNMSMapping.java
index 1fde183aaf2cc7fb44f5f6ce4a93be44fe6c86ef..d8a6d53145382ed67aabbe62bc1ec9a6f2413651 100644
--- a/src/main/java/org/bukkit/craftbukkit/BukkitToNMSMapping.java
+++ b/src/main/java/org/bukkit/craftbukkit/BukkitToNMSMapping.java
@@ -8,13 +8,14 @@ import net.minecraft.resources.ResourceKey;
 import org.bukkit.Keyed;
 import org.bukkit.NamespacedKey;
 import org.bukkit.craftbukkit.util.CraftNamespacedKey;
+import org.bukkit.craftbukkit.util.Handleable;
 
 import java.util.Objects;
 
 /**
  * @param <H> The NMS handle
  */
-public abstract class BukkitToNMSMapping<H> implements Keyed, Translatable {
+public abstract class BukkitToNMSMapping<H> implements Handleable<H>, Keyed, Translatable {
     private final NamespacedKey key;
     private final H handle;
 
@@ -23,6 +24,7 @@ public abstract class BukkitToNMSMapping<H> implements Keyed, Translatable {
         this.handle = handle;
     }
 
+    @Override
     public H getHandle() {
         return handle;
     }
@@ -45,18 +47,11 @@ public abstract class BukkitToNMSMapping<H> implements Keyed, Translatable {
     }
 
     public static <C extends Keyed, V> C minecraftToBukkit(V minecraft, ResourceKey<Registry<V>> nmsRegistry, org.bukkit.Registry<C> bukkitRegistry) {
-        Preconditions.checkArgument(minecraft != null);
-        Registry<V> registry = CraftRegistry.getMinecraftRegistry(nmsRegistry);
-        C bukkit = bukkitRegistry.get(CraftNamespacedKey.fromMinecraft(registry.getResourceKey(minecraft).orElseThrow()
-                                                                               .location()));
-        Preconditions.checkArgument(bukkit != null);
-        return bukkit;
+        return CraftRegistry.minecraftToBukkit(minecraft, nmsRegistry, bukkitRegistry);
     }
 
     public static <C extends Keyed, V> V bukkitToMinecraft(C bukkit, ResourceKey<Registry<V>> nmsRegistry) {
-        Preconditions.checkArgument(bukkit != null);
-        return CraftRegistry.getMinecraftRegistry(nmsRegistry)
-                            .getOptional(CraftNamespacedKey.toMinecraft(bukkit.getKey())).orElseThrow();
+        return CraftRegistry.bukkitToMinecraft(bukkit);
     }
 
     public static <C extends Keyed, V> C minecraftHolderToBukkit(Holder<V> minecraft, ResourceKey<Registry<V>> nmsRegistry, org.bukkit.Registry<C> bukkitRegistry) {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftEntityActivity.java b/src/main/java/org/bukkit/craftbukkit/CraftEntityActivity.java
index b25a08cc1e7bcf015764201580d020401e201172..776a4b14e0a5d78ef183c1c012d7ffcae8b59876 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftEntityActivity.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftEntityActivity.java
@@ -1,11 +1,22 @@
 package org.bukkit.craftbukkit;
 
+import net.minecraft.core.registries.Registries;
 import org.bukkit.EntityActivity;
 import net.minecraft.world.entity.schedule.Activity;
 import org.bukkit.NamespacedKey;
+import org.bukkit.PoiType;
+import org.bukkit.Registry;
 import org.jetbrains.annotations.NotNull;
 
 public class CraftEntityActivity extends BukkitToNMSMapping<Activity> implements EntityActivity {
+    public static EntityActivity minecraftToBukkit(Activity minecraft) {
+        return minecraftToBukkit(minecraft, Registries.ACTIVITY, Registry.ENTITY_ACTIVITY);
+    }
+
+    public static Activity bukkitToMinecraft(EntityActivity bukkit) {
+        return bukkitToMinecraft(bukkit, Registries.ACTIVITY);
+    }
+
     public CraftEntityActivity(NamespacedKey key, Activity handle) {
         super(key, handle);
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftEntitySchedule.java b/src/main/java/org/bukkit/craftbukkit/CraftEntitySchedule.java
index af41fd04720694a46db4e50df05a0928f9f25e9f..75c752c424b6730be580e9d3ff3d9a939f663957 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftEntitySchedule.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftEntitySchedule.java
@@ -1,11 +1,22 @@
 package org.bukkit.craftbukkit;
 
+import net.minecraft.core.registries.Registries;
+import net.minecraft.world.entity.schedule.Activity;
 import net.minecraft.world.entity.schedule.Schedule;
+import org.bukkit.EntityActivity;
 import org.bukkit.EntitySchedule;
 import org.bukkit.NamespacedKey;
+import org.bukkit.Registry;
 import org.jetbrains.annotations.NotNull;
 
 public class CraftEntitySchedule extends BukkitToNMSMapping<Schedule> implements EntitySchedule {
+    public static EntitySchedule minecraftToBukkit(Schedule minecraft) {
+        return minecraftToBukkit(minecraft, Registries.SCHEDULE, Registry.ENTITY_SCHEDULE);
+    }
+
+    public static Schedule bukkitToMinecraft(EntitySchedule bukkit) {
+        return bukkitToMinecraft(bukkit, Registries.SCHEDULE);
+    }
     public CraftEntitySchedule(NamespacedKey key, Schedule handle) {
         super(key, handle);
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftPoiType.java b/src/main/java/org/bukkit/craftbukkit/CraftPoiType.java
index 5c6d277657dcc5aa7a03cceb87124fa8dfcc24c0..2503667a2a095c244fb6519279bb6c303b11517e 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftPoiType.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftPoiType.java
@@ -4,6 +4,7 @@ import net.minecraft.core.registries.Registries;
 import org.bukkit.NamespacedKey;
 import org.bukkit.PoiType;
 import org.bukkit.Registry;
+import org.bukkit.craftbukkit.util.Handleable;
 import org.jetbrains.annotations.NotNull;
 
 public class CraftPoiType extends BukkitToNMSMapping<net.minecraft.world.entity.ai.village.poi.PoiType> implements PoiType {
diff --git a/src/main/java/org/bukkit/craftbukkit/generator/OldCraftChunkData.java b/src/main/java/org/bukkit/craftbukkit/generator/OldCraftChunkData.java
index 587eed2026dea6c4ad9fab1493cd2ad80a6eb760..72deb43a83a3752d078df408b49840d1c113f8d6 100644
--- a/src/main/java/org/bukkit/craftbukkit/generator/OldCraftChunkData.java
+++ b/src/main/java/org/bukkit/craftbukkit/generator/OldCraftChunkData.java
@@ -10,6 +10,7 @@ import net.minecraft.world.level.chunk.LevelChunkSection;
 import org.bukkit.Material;
 import org.bukkit.block.Biome;
 import org.bukkit.block.data.BlockData;
+import org.bukkit.craftbukkit.CraftWorld;
 import org.bukkit.craftbukkit.block.CraftBlockType;
 import org.bukkit.craftbukkit.block.data.CraftBlockData;
 import org.bukkit.craftbukkit.util.CraftMagicNumbers;
@@ -181,7 +182,7 @@ public final class OldCraftChunkData implements ChunkGenerator.ChunkData {
         int offset = (y - this.minHeight) >> 4;
         LevelChunkSection section = this.sections[offset];
         if (create && section == null) {
-            this.sections[offset] = section = new LevelChunkSection(this.biomes, this.world instanceof org.bukkit.craftbukkit.CraftWorld ? ((org.bukkit.craftbukkit.CraftWorld) this.world).getHandle() : null, null, ((org.bukkit.craftbukkit.CraftWorld) world).getHandle().getSectionYFromSectionIndex(offset)); // MCCLab - Add BlockBehaviour // Paper - Anti-Xray - Add parameters
+            this.sections[offset] = section = new LevelChunkSection(this.biomes, this.world instanceof org.bukkit.craftbukkit.CraftWorld ? ((org.bukkit.craftbukkit.CraftWorld) this.world).getHandle() : null, null, this.world instanceof CraftWorld ?((org.bukkit.craftbukkit.CraftWorld) world).getHandle().getSectionYFromSectionIndex(offset) : offset + (this.minHeight >> 4)); // MCCLab - Add BlockBehaviour // Paper - Anti-Xray - Add parameters
         }
         return section;
     }
diff --git a/src/test/java/org/bukkit/craftbukkit/entity/EntityTypesTest.java b/src/test/java/org/bukkit/craftbukkit/entity/EntityTypesTest.java
index 2b4c482e5162b22ffbe67de8b138144b760436d8..b7b1b4a207f155cc1a22bfe00cb140db1dcde7b5 100644
--- a/src/test/java/org/bukkit/craftbukkit/entity/EntityTypesTest.java
+++ b/src/test/java/org/bukkit/craftbukkit/entity/EntityTypesTest.java
@@ -10,52 +10,8 @@ import java.util.List;
 import java.util.jar.JarFile;
 import java.util.stream.Stream;
 import java.util.zip.ZipEntry;
-import org.bukkit.entity.AbstractArrow;
-import org.bukkit.entity.AbstractHorse;
-import org.bukkit.entity.AbstractSkeleton;
-import org.bukkit.entity.AbstractVillager;
-import org.bukkit.entity.AbstractWindCharge;
-import org.bukkit.entity.Ageable;
-import org.bukkit.entity.Ambient;
-import org.bukkit.entity.Animals;
-import org.bukkit.entity.Boss;
-import org.bukkit.entity.Breedable;
-import org.bukkit.entity.ChestedHorse;
-import org.bukkit.entity.ComplexEntityPart;
-import org.bukkit.entity.ComplexLivingEntity;
-import org.bukkit.entity.Creature;
-import org.bukkit.entity.Damageable;
-import org.bukkit.entity.Display;
-import org.bukkit.entity.EnderDragonPart;
-import org.bukkit.entity.Enemy;
-import org.bukkit.entity.Entity;
-import org.bukkit.entity.EntityType;
-import org.bukkit.entity.Explosive;
-import org.bukkit.entity.Fireball;
-import org.bukkit.entity.Fish;
-import org.bukkit.entity.Flying;
-import org.bukkit.entity.Golem;
-import org.bukkit.entity.Hanging;
-import org.bukkit.entity.HumanEntity;
-import org.bukkit.entity.Illager;
-import org.bukkit.entity.LingeringPotion;
-import org.bukkit.entity.LivingEntity;
-import org.bukkit.entity.Minecart;
-import org.bukkit.entity.Mob;
-import org.bukkit.entity.Monster;
-import org.bukkit.entity.NPC;
-import org.bukkit.entity.PiglinAbstract;
-import org.bukkit.entity.Projectile;
-import org.bukkit.entity.Raider;
-import org.bukkit.entity.SizedFireball;
-import org.bukkit.entity.Spellcaster;
-import org.bukkit.entity.SplashPotion;
-import org.bukkit.entity.Steerable;
-import org.bukkit.entity.Tameable;
-import org.bukkit.entity.ThrowableProjectile;
-import org.bukkit.entity.TippedArrow;
-import org.bukkit.entity.Vehicle;
-import org.bukkit.entity.WaterMob;
+
+import org.bukkit.entity.*;
 import org.bukkit.support.AbstractTestingBase;
 import org.junit.jupiter.api.AfterAll;
 import org.junit.jupiter.api.BeforeAll;
@@ -101,6 +57,7 @@ public class EntityTypesTest extends AbstractTestingBase {
             Minecart.class,
             Mob.class,
             Monster.class,
+            MilkGivingEntity.class, // MCCLab: Add MilkGivingEntity
             NPC.class,
             PiglinAbstract.class,
             Projectile.class,
diff --git a/src/test/java/org/bukkit/craftbukkit/inventory/DeprecatedItemMetaCustomValueTest.java b/src/test/java/org/bukkit/craftbukkit/inventory/DeprecatedItemMetaCustomValueTest.java
index 8e03e14d0e65bfdf2196a08220d1408b1297aa0d..0e50a06d209dc86e3752006459042792b0b23a0d 100644
--- a/src/test/java/org/bukkit/craftbukkit/inventory/DeprecatedItemMetaCustomValueTest.java
+++ b/src/test/java/org/bukkit/craftbukkit/inventory/DeprecatedItemMetaCustomValueTest.java
@@ -7,6 +7,8 @@ import java.nio.ByteBuffer;
 import java.util.Locale;
 import java.util.Map;
 import java.util.UUID;
+
+import de.verdox.itemformat.BasicItemFormat;
 import org.bukkit.Bukkit;
 import org.bukkit.Material;
 import org.bukkit.NamespacedKey;
@@ -113,6 +115,8 @@ public class DeprecatedItemMetaCustomValueTest extends AbstractTestingBase {
         CraftMetaItem meta = this.createComplexItemMeta();
         stack.setItemMeta(meta);
 
+        BasicItemFormat.removeConversionTag(stack); // MCCLab - Add BasicItemFormat
+
         YamlConfiguration configuration = new YamlConfiguration();
         configuration.set("testpath", stack);
 
diff --git a/src/test/java/org/bukkit/craftbukkit/inventory/PersistentDataContainerTest.java b/src/test/java/org/bukkit/craftbukkit/inventory/PersistentDataContainerTest.java
index 54ffbfd91a03efa2d0d271ed10db4209a2309638..4a9a032c74710a19d0233a9d627ca3a971b4ab86 100644
--- a/src/test/java/org/bukkit/craftbukkit/inventory/PersistentDataContainerTest.java
+++ b/src/test/java/org/bukkit/craftbukkit/inventory/PersistentDataContainerTest.java
@@ -12,6 +12,8 @@ import java.util.Map;
 import java.util.UUID;
 import java.util.function.BiConsumer;
 import java.util.stream.Stream;
+
+import de.verdox.itemformat.BasicItemFormat;
 import net.minecraft.core.component.DataComponentPatch;
 import org.bukkit.Bukkit;
 import org.bukkit.Material;
@@ -147,6 +149,8 @@ public class PersistentDataContainerTest extends AbstractTestingBase {
         CraftMetaItem meta = this.createComplexItemMeta();
         stack.setItemMeta(meta);
 
+        BasicItemFormat.removeConversionTag(stack); // MCCLab - Add BasicItemFormat
+
         YamlConfiguration configuration = new YamlConfiguration();
         configuration.set("testpath", stack);
 
diff --git a/src/test/java/org/bukkit/craftbukkit/legacy/MaterialReroutingTest.java b/src/test/java/org/bukkit/craftbukkit/legacy/MaterialReroutingTest.java
index 0fac826b9367a821c6801190997592219cb47f73..a7d390ae507da8cd46e780c0690558de209aa2a6 100644
--- a/src/test/java/org/bukkit/craftbukkit/legacy/MaterialReroutingTest.java
+++ b/src/test/java/org/bukkit/craftbukkit/legacy/MaterialReroutingTest.java
@@ -59,6 +59,14 @@ public class MaterialReroutingTest extends AbstractTestingBase {
                 // Paper start - types that cannot be translated to ItemType/BlockType
                 .filter(entry -> !entry.getName().equals("com/destroystokyo/paper/MaterialSetTag.class"))
                 // Paper end - types that cannot be translated to ItemType/BlockType
+
+                // MCCreativeLab start
+                .filter(entry -> !entry.getName().endsWith("CustomItemData.class"))
+                .filter(entry -> !entry.getName().endsWith("BehaviorFactory.class"))
+                .filter(entry -> !entry.getName().endsWith("GoalFactory.class"))
+                .filter(entry -> !entry.getName().endsWith("MobBehaviour.class"))
+                .filter(entry -> !entry.getName().endsWith("VanillaRegistryManipulator.class"))
+                // MCCreativeLab end
                 .map(entry -> {
                     try {
                         return MaterialReroutingTest.jarFile.getInputStream(entry);
diff --git a/src/test/java/org/bukkit/registry/RegistryConversionTest.java b/src/test/java/org/bukkit/registry/RegistryConversionTest.java
index 3216a3549011659a91cc4a0c656a56cdf4e45504..082860cfe772f3a563f43fd9a0d2928384d643ca 100644
--- a/src/test/java/org/bukkit/registry/RegistryConversionTest.java
+++ b/src/test/java/org/bukkit/registry/RegistryConversionTest.java
@@ -264,7 +264,7 @@ public class RegistryConversionTest extends AbstractTestingBase {
      */
     @Order(3)
     @RegistriesTest
-    public void testMinecraftToBukkitNoValidMinecraft(io.papermc.paper.registry.RegistryKey<? extends Keyed> type, Class<? extends Keyed> clazz, ResourceKey<net.minecraft.core.Registry<?>> registryKey, // Paper
+    public void  testMinecraftToBukkitNoValidMinecraft(io.papermc.paper.registry.RegistryKey<? extends Keyed> type, Class<? extends Keyed> clazz, ResourceKey<net.minecraft.core.Registry<?>> registryKey, // Paper
                                                       Class<? extends Keyed> craftClazz, Class<?> minecraftClazz) throws IllegalAccessException {
         this.checkValidMinecraftToBukkit(clazz);
 
