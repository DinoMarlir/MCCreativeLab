From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: verdox <mail.ysp@web.de>
Date: Wed, 14 Aug 2024 00:38:37 +0000
Subject: [PATCH] Add FAWE support


diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index d0aa61f8a4b6b173d34c409e5cad7b0c58fe6606..e973757c69a1aec3edb3bb888b1abe0dafb30eab 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -855,6 +855,7 @@ public class ServerLevel extends Level implements WorldGenLevel, ca.spottedleaf.
         for (int sectionIndex = 0, sectionsLen = sections.length; sectionIndex < sectionsLen; sectionIndex++) {
             final int offsetY = (sectionIndex + minSection) << 4;
             final LevelChunkSection section = sections[sectionIndex];
+            section.init(this, chunk.getPos(), getSectionYFromSectionIndex(sectionIndex)); // MCCreativeLab - Add FAWE support
             final net.minecraft.world.level.chunk.PalettedContainer<net.minecraft.world.level.block.state.BlockState> states = section.states;
             if (section == null || !section.isRandomlyTickingBlocks()) {
                 continue;
diff --git a/src/main/java/net/minecraft/world/level/chunk/LevelChunkSection.java b/src/main/java/net/minecraft/world/level/chunk/LevelChunkSection.java
index f16bd7f5a99417d5b3c213db9fe375c25781dd11..0f169b1e8ba51036b8262c8b88344b8ff01232ca 100644
--- a/src/main/java/net/minecraft/world/level/chunk/LevelChunkSection.java
+++ b/src/main/java/net/minecraft/world/level/chunk/LevelChunkSection.java
@@ -52,6 +52,24 @@ public class LevelChunkSection implements ca.spottedleaf.moonrise.patches.block_
     }
     // Paper end - block counting
 
+    // MCCreativeLab start - Add FAWE support
+    public LevelChunkSection(PalettedContainer<BlockState> datapaletteblock, PalettedContainer<Holder<Biome>> palettedcontainerro) {
+        // CraftBukkit end
+        this.states = datapaletteblock;
+        this.biomes = palettedcontainerro;
+        this.recalcBlockCounts();
+    }
+
+    public void init(net.minecraft.world.level.Level level, net.minecraft.world.level.ChunkPos chunkPos, int chunkSectionY){
+        if(this.level != null && this.chunkPos != null)
+            return;
+        this.level = level;
+        this.chunkPos = chunkPos;
+        this.chunkSectionY = chunkSectionY;
+        this.recalcBlockCounts();
+    }
+    // MCCreativeLab end - Add FAWE support
+
     public LevelChunkSection(net.minecraft.world.level.Level level, net.minecraft.world.level.ChunkPos chunkPos, PalettedContainer<BlockState> datapaletteblock, PalettedContainer<Holder<Biome>> palettedcontainerro, int chunkSectionY) {
         // CraftBukkit end
         this.level = level;
@@ -115,7 +133,7 @@ public class LevelChunkSection implements ca.spottedleaf.moonrise.patches.block_
 
         if (!iblockdata1.isAir()) {
             --this.nonEmptyBlockCount;
-            if (iblockdata1.isRandomlyTicking(level, globalX, globalY, globalZ, state)) { // MCCLab start - Add BlockBehaviour
+            if (this.level != null ? iblockdata1.isRandomlyTicking(level, globalX, globalY, globalZ, state) : iblockdata1.isRandomlyTicking()) { // MCCLab start - Add BlockBehaviour
                 --this.tickingBlockCount;
             }
         }
@@ -126,7 +144,7 @@ public class LevelChunkSection implements ca.spottedleaf.moonrise.patches.block_
 
         if (!state.isAir()) {
             ++this.nonEmptyBlockCount;
-            if (state.isRandomlyTicking(level, globalX, globalY, globalZ, state)) { // MCCLab start - Add BlockBehaviour
+            if (this.level != null ? state.isRandomlyTicking(level, globalX, globalY, globalZ, state) : state.isRandomlyTicking()) { // MCCLab start - Add BlockBehaviour
                 ++this.tickingBlockCount;
             }
         }
@@ -220,7 +238,7 @@ public class LevelChunkSection implements ca.spottedleaf.moonrise.patches.block_
                     this.specialCollidingBlocks += paletteCount;
                 }
                 this.nonEmptyBlockCount += paletteCount;
-                if (state.isRandomlyTicking(level, globalX, globalY, globalZ, state)) {
+                if (level != null ? state.isRandomlyTicking(level, globalX, globalY, globalZ, state) : state.isRandomlyTicking()) {
                     this.tickingBlockCount += paletteCount;
                     final int[] raw = coordinates.elements();
 
